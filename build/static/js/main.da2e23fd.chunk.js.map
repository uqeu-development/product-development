{"version":3,"sources":["context/index.js","components/console/index.js","components/input/index.js","constants/index.js","components/output/index.js","App.js","index.js"],"names":["appContext","React","createContext","AppProvider","children","useState","consoleMsg","setConsoleMsg","file","setFile","output","setOutput","fileData","setFileData","skus","setSkus","json","setJson","Provider","value","useAppContext","useContext","Console","consoleRef","useRef","useEffect","newMsg","current","innerHTML","className","ref","Input","fileReader","FileReader","readAsBinaryString","onload","event","data","target","result","workbook","XLSX","read","type","utils","sheet_to_json","Sheets","Sheet1","href","onChange","e","f","files","name","onFileUpload","REGIONS","window","location","includes","Output","jsonRef","error","setError","fetching","setFetching","formatedData","i","length","r","Object","keys","region","sku","getProductInfo","link","a","price","salePrice","swatches","image","url","price_int","salePrice_int","parser","DOMParser","axios","get","response","parseFromString","querySelector","dataset","dlmasterid","title","innerText","src","URL","pathname","parseFloat","replace","formatedPrice","formatedSalePrice","console","log","fetchAllProducts","currentProducts","map","index","product","push","promises","Promise","all","then","JSON","stringify","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.da2e23fd.chunk.js","sourcesContent":["\nimport React, { useContext, useState, useEffect } from 'react';\n\nconst appContext = React.createContext();\n\nconst AppProvider = ({ children }) => {\n\n    const [consoleMsg, setConsoleMsg] = useState(\"waiting on file upload...\");\n    const [file, setFile] = useState(\"\");\n    const [output, setOutput] = useState(\"\");\n    const [fileData, setFileData] = useState(\"\");\n    const [skus, setSkus] = useState([]);\n    const [json, setJson] = useState({})\n\n\n\n    return (\n        <appContext.Provider value={{ consoleMsg, setConsoleMsg, file, setFile, output, setOutput, fileData, setFileData, skus, setSkus, json, setJson }}>\n            {children}\n        </appContext.Provider>\n    )\n}\n\nexport const useAppContext = () => {\n    return useContext(appContext)\n}\n\nexport { AppProvider, appContext }","import React, { useEffect, useRef } from 'react';\nimport { useAppContext } from '../../context';\n\nconst Console = () => {\n\n    const consoleRef = useRef();\n    const { consoleMsg } = useAppContext();\n\n    useEffect(() => {\n        const newMsg = `<pre>${consoleMsg}</pre>`\n        consoleRef.current.innerHTML += newMsg;\n    }, [consoleMsg])\n\n\n    return <div className=\"console\" ref={consoleRef}></div>\n}\n\nexport default Console;","import React, { useEffect } from 'react';\nimport XLSX from 'xlsx';\nimport { useAppContext } from '../../context';\n\n\n\nconst Input = () => {\n\n\n    const { file, setFile, setConsoleMsg, setFileData } = useAppContext();\n\n    const onFileUpload = (e) => {\n        let f = e.target.files[0];\n        setFile(f);\n        setConsoleMsg(`${f.name} uploaded...`)\n    }\n\n    useEffect(() => {\n        if (file !== \"\") {\n            let fileReader = new FileReader();\n            fileReader.readAsBinaryString(file);\n            fileReader.onload = (event) => {\n                let data = event.target.result;\n                let workbook = XLSX.read(data, { type: \"binary\" })\n                let skus = XLSX.utils.sheet_to_json(workbook.Sheets.Sheet1);\n                setConsoleMsg('converting XLSX to JSON...')\n                setFileData(skus);\n            }\n        }\n    }, [file])\n\n    return (\n        <div className='input-container'>\n            <h3>Upload file</h3>\n            <p>Download template <a href=\"/\" target=\"_blank\">here</a>.</p>\n            <input type=\"file\" onChange={(e) => onFileUpload(e)}></input>\n        </div>\n    )\n}\n\nexport default Input;","import $ from 'jquery'\n\n\n// export const REGIONS = { \"GB\": {}, 'SE': {}, 'DK': {}, 'EU': {}, 'ES': {}, 'DE': {}, 'IT': {}, 'FR': {} };\nexport const REGIONS = { \"GB\": {} }\n// export const REGIONS = ['GB', 'FR'];\nexport let URLPREFIX = \"https://www.uniqlo.com\";\nif (window.location.href.includes(\"prodtest\")) {\n    URLPREFIX = \"https://prodtest.uniqlo.com\";\n}\n\nexport const fetchName = async (data) => {\n    let name;\n    try {\n        name = await $(data)[0].childNodes[1].childNodes[5].childNodes[1].innerText;\n    } catch (err) {\n        return \"undefined\"\n    }\n    return name;\n}\n\nexport const fetchPrice = async (data) => {\n    let price;\n    try {\n        price = await $(data)[0].childNodes[1].childNodes[5].childNodes[3].childNodes[1].innerText;\n    } catch (err) {\n        return \"undefined\"\n    }\n    return price;\n}\n\nexport const fetchSalePrice = async (data) => {\n    let salePrice;\n    try {\n        salePrice = await $(data)[0].childNodes[1].childNodes[5].childNodes[3].childNodes[3].innerText.trim();\n    } catch (err) {\n        return \"undefined\"\n    }\n    return salePrice;\n}\n\nexport const fetchSwatches = async (data) => {\n    let swatches;\n    try {\n        swatches = await $(data)[0].childNodes[1].childNodes[9].childNodes[1].outerHTML;\n    } catch (error) {\n        return null\n    }\n    return swatches;\n}\n\nexport const fetchImage = (data) => {\n    let image;\n    try {\n        image = $(data)[0].childNodes[1].childNodes[3].childNodes[2].childNodes[1].src;\n    } catch (err) {\n        return null\n    }\n    return image;\n}\n\nexport const fetchURL = async (data) => {\n    let url\n    try {\n\n        url = await $(data)[0].childNodes[1].childNodes[5].childNodes[1].childNodes[1].childNodes[1].href;\n    } catch (err) {\n        return null;\n    }\n    return url;\n}\n\n\n\n","import React, { useEffect, useState, useRef } from 'react';\nimport { useAppContext } from '../../context';\nimport { REGIONS } from '../../constants';\nimport $ from 'jquery'\nimport axios from 'axios';\n\n\nconst Output = () => {\n\n    const jsonRef = useRef();\n    const { fileData, skus, setSkus, setConsoleMsg, setJson, json } = useAppContext();\n    const [error, setError] = useState(\"\");\n    const [fetching, setFetching] = useState(true)\n\n\n    useEffect(() => {\n        if (fileData !== \"\") {\n\n            setConsoleMsg('formating...')\n            // const skus_to_array = [];\n\n            // for (let i = 0; i < fileData.length; i++) {\n            //     skus_to_array.push(fileData[i].skus)\n            // }\n            // setSkus(skus_to_array);\n\n            let formatedData = {};\n            for (let i = 0; i < fileData.length; i++) {\n                for (let r = 0; r < Object.keys(REGIONS).length; r++) {\n                    const region = Object.keys(REGIONS)[r];\n                    fileData[i] = { ...fileData[i], [region]: {} };\n                    formatedData[fileData[i].sku] = fileData[i];\n                }\n            }\n\n            setSkus(fileData);\n\n\n        }\n    }, [fileData])\n\n\n\n    const getProductInfo = async (link, region) => {\n        let name = \"\";\n        let price = \"\";\n        let salePrice = \"\";\n        let swatches = \"\";\n        let image = \"\";\n        let url = \"\";\n        let price_int = '';\n        let salePrice_int = '';\n        let sku = ''\n\n        try {\n            let parser = new DOMParser();\n            const response = await axios.get(link);\n            let data = parser.parseFromString(response.data, 'text/html');\n\n            // const datasets = data.querySelector('.productTile__swatchList a')?.dataset || \"\";\n            // // console.log(datasets)\n\n            // Object.keys(datasets).map((keys) => {\n\n            //     delete datasets[keys]\n            // })\n\n            sku = data.querySelector('[data-dlmasterid]')?.dataset?.dlmasterid;\n            name = data.querySelector('.productTile__link')?.title;\n            price = data.querySelector('.product-standard-price')?.innerText || data.querySelector('.product-current-price')?.innerText;\n            salePrice = data.querySelector('.product-sales-price')?.innerText || '';\n            swatches = data.querySelector('.productTile__swatchList')?.innerHTML;\n\n\n            image = data.querySelector('.productTile__image')?.src;\n            url = data.querySelector('.productTile__link')?.href;\n            url = new URL(url);\n            url = \"https://www.uniqlo.com\" + url.pathname;\n\n            if (region === \"GB\") {\n                price_int = parseFloat(price.replace('£', ''));\n                salePrice_int = parseFloat(salePrice.replace('£', ''));\n            } else if (region === \"DK\") {\n                price_int = parseFloat(price.replace('DKK', ''));\n                salePrice_int = parseFloat(salePrice.replace('DKK', ''));\n            } else if (region === \"SE\") {\n                price_int = parseFloat(price.replace('kr', ''));\n                salePrice_int = parseFloat(salePrice.replace('kr', ''));\n            } else {\n                const formatedPrice = price.replace(',', '.');\n                const formatedSalePrice = salePrice.replace(',', '.');\n                price_int = parseFloat(formatedPrice.replace('€', ''));\n                salePrice_int = parseFloat(formatedSalePrice.replace('€', ''));\n            }\n\n\n            return { sku, name, price, salePrice, price_int, salePrice_int, image, url, swatches };\n        } catch (err) {\n            setError(link)\n            console.log(err)\n        }\n        return { name, price, salePrice, price_int, salePrice_int, image, url, swatches };\n\n    }\n\n    const fetchAllProducts = async () => {\n        setConsoleMsg(`${skus.length} skus...`)\n        const productInfo = skus;\n        // const r = [\"GB\", \"SE\", \"DK\", \"EU\", \"DE\", \"ES\", \"IT\", \"FR\"]\n        const r = [\"GB\"]\n        const currentProducts = [];\n        for await (let region of r) {\n            setConsoleMsg(`fetching products for ${region}...`)\n\n            let link = `https://www.uniqlo.com/on/demandware.store/Sites-${region}-Site/default/Recommendations-Ajax?item0=`\n\n\n            // const promises = await Object.keys(skus).map(async (sku) => {\n            //     const product = await getProductInfo(link + sku, region);\n            // })\n\n            const promises = await skus.map(async (sku, index) => {\n                const product = await getProductInfo(link + sku.sku, region);\n                currentProducts.push({ ...product, ...skus[index] })\n            })\n\n            const j = await Promise.all(promises);\n            setJson(currentProducts);\n        }\n\n\n    }\n\n    useEffect(() => {\n        if (skus.length !== 0) {\n            setConsoleMsg(\"creating JSON object for output...\");\n            fetchAllProducts().then(() => setFetching(false))\n        }\n    }, [skus])\n\n\n    useEffect(() => {\n        if (error !== \"\") {\n            // setConsoleMsg(`failed to fetch ${error}...`)\n        }\n    }, [error])\n\n\n    useEffect(() => {\n        if (fetching === false) {\n            setConsoleMsg('fetching finished...')\n            jsonRef.current.value = JSON.stringify(json);\n        }\n    }, [fetching])\n\n\n\n    return (\n        <div className=\"output-container\">\n            <h3>Output JSON</h3>\n            <textarea ref={jsonRef}></textarea>\n        </div>\n    )\n}\n\nexport default Output;","import React from 'react';\nimport './App.css';\nimport Console from './components/console';\nimport Input from './components/input';\nimport Output from './components/output';\n\nconst App = () => {\n\n  return (\n    <div className=\"App\">\n      <div className=\"col\">\n        <Input />\n        <Console />\n      </div>\n      <div className=\"col\">\n        <Output />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { AppProvider } from './context';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n      <App />\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}